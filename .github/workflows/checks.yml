name: Tests

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          sudo apt-get update && apt-get install -y \
            libgl1-mesa-dev \
            libglib2.0-0 \ 
            wget \
            tar \
            ca-certificates \
            xz-utils \
            libxrender1 \ 
            libxi6 \
            libxkbcommon0 \ 
            libsm6 \
            libice6 \
            libx11-6 \
            libxext6 \
            libxfixes3 \
            libxxf86vm1 \
            libxrandr2 \
            libxinerama1 \
            libxcursor1 \
            libxcomposite1 \
            libasound2 \
            libpulse0 \
            libopenal1 \
            libsndfile1 \
            libvorbisfile3 \
            libvorbis0a \
            libogg0 \
            libflac8 \
            libtheora0 \
            libjack-jackd2-0 \
            libavcodec58 \
            libavdevice58 \
            libavformat58 \
            libavutil56 \
            libswscale5 \
            libswresample3 \
            libavfilter7 \
            libglew2.1 \
            libopencolorio1v5 \
            libraw19 \
            libtiff5 \
            libjpeg62-turbo \
            libpng16-16 \
            libfreetype6 \
            libfontconfig1 \
            libharfbuzz0b \
            libpugixml1v5 \
            libspnav0 \
            libtinyxml2.6.2v5 \
            libjemalloc2 \
            libjemalloc-dev
          wget https://download.blender.org/release/Blender4.3/blender-4.3.0-linux-x64.tar.xz && \
            tar -xvf blender-4.3.0-linux-x64.tar.xz && \
            mv blender-4.3.0-linux-x64 /opt/blender && \
            ln -s /opt/blender/blender /usr/bin/blender && \
            /usr/bin/blender --version
          python -m pip install --upgrade pip
          pip install -r dev/requirements.txt

      - name: Run mypy to generate cache
        run: mypy maps4fs || true

      - name: Install missing stub packages
        run: mypy --install-types --non-interactive

      - name: Run mypy
        run: mypy maps4fs

      - name: Run pylint
        run: pylint maps4fs

      - name: Run pytest with coverage
        run: pytest --cov=maps4fs/generator --cov-report xml --cov-config=.coveragerc

      - name: Download Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Upload coverage data to Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          ./cc-test-reporter after-build --exit-code 0 -t coverage.py --prefix /home/runner/work/maps4fs/maps4fs/